stages:
  - base
  - test
  - build
  - deploy

variables:
  CI_IMAGE_TAG: ${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}
  CI_BASE_IMAGE: ${CI_REGISTRY_IMAGE}/base:latest

Base Image:
  stage: base
  image: docker:18.09
  services:
    - docker:18.09-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_BASE_IMAGE || true
  script:
    - docker build
      --cache-from $CI_BASE_IMAGE
      --tag $CI_BASE_IMAGE
      -f Base.dockerfile
      .
    - docker push $CI_BASE_IMAGE

Unit Test:
  image: registry.gitlab.com/zoetic-assigment/backend/base:latest
  stage: test
  needs:
    - Base Image
  variables:
    SPRING_PROFILES_ACTIVE: local
  script:
    - mvn verify
  artifacts:
    when: on_failure
    paths:
      - target/surefire-reports

Build:
  image: docker:18.09
  needs:
    - Base Image
  stage: build
  services:
    - docker:18.09-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_DRIVER: overlay2
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build
      --tag $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG
      .
    - docker tag $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG

Deploy:
  image: dtzar/helm-kubectl:3.2.4
  stage: deploy
  only:
    - master
  script: |
    kubectl config set-cluster k8s --server="${SERVER}"
    kubectl config set clusters.k8s.certificate-authority-data ${CERTIFICATE_AUTHORITY_DATA}
    kubectl config set-credentials gitlab --token="${USER_TOKEN}"
    kubectl config set-context default --cluster=k8s --user=gitlab
    kubectl config use-context default
    sed -i 's/<VERSION>/'"${$CI_IMAGE_TAG}"'/g' k8s/deployment.yaml
    kubectl apply -f k8s
